package org.example;

// TODO: 08.09.2022 –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é byte maxDigitsSumPosition(int[] arr),
//  –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–∏–π –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞, –∏–º–µ—é—â–µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É —Ü–∏—Ñ—Ä.

import java.util.Scanner;

public class App {

    public static void main(String[] args) {

 // –ó–∞–¥–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Å–∏–≤

        Scanner in = new Scanner(System.in);
        System.out.println("–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—Å—ë –¥–ª–∏–Ω–Ω–æ? ");
        int[] arr = new int[in.nextInt()];

        System.out.println("–ü–æ—Å—á–∏—Ç–∞–µ–º—Å—è –æ—Ç 1 –¥–æ " + arr.length);


// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

        System.out.println(maxDigitsSumPosition(arr));
        //System.out.println(sumDigits(84));


    }
// –ò—â–µ–º –Ω–∞–∏–±–æ–ª—å—à—É—é —Å—É–º–º—É
    public static int maxDigitsSumPosition(int[] arr) {

        int sum = 0;

        for (int i = 0; i < arr.length; i++) {
// –ó–∞–ø–æ–ª–Ω—è–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –∑–∞–ø–æ–ª–Ω–∏–ª–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            arr[i] = i+1;
            //System.out.println(arr[i]);
// –°—á–∏—Ç–∞–µ–º

            if (arr[i] < 10) {
               sum = arr[i];
            }
            else {
               int array = arr[i];
               while (array != 0) {
                   sum += (array % 10);
                   array /= 10;
               }

            }

            //return arr[i] >= 10 ? arr[i] % 10 + maxDigitsSumPosition(i / 10) : arr[i];

            //(arr[i] % 10 + summ(arr[i] / 10)) ;
                    //> summ ? summ : summ = arr[i] % 10 + summ(arr[i] / 10);
        }
        /*while (i != arr.length){
            //summ = i % 10 + summ(i / 10);
            i++;
            return i;
        }*/
        return sum;


    }


}
/////////////////////////////////////////////////////////////////////
/*–∑–∞–¥2=—â—â—ë—Ç —Ü–∏–∫–ª–æ–º üîß
 int summacifr == 0;
 int cifra ;
int ostatok ;

    for (int i == 10;   i < n*10 ;     i == i*10 ; )
{
       ostatok == n % i  ;
       cifra ==  ostatok*10 / i ;
       summacifr == summacifr + cifra ;
  n == n - ostatok; //–∑–∞–Ω—É–ª–∏—Ç—å–ó–ê–î–ù–ò–ï—Ü–∏—Ñ—Ä—ã
}
 ,,,,–¥–∞–ª—å—à–µ –°–†–ê–í–ù–ò–í–ê–¢–¨  summacifr
//==makssumma
,,,,,,,,,,,,,,,,return { –í–°–ï–∏–Ω–¥–µ–∫—Å—ã —Å makssumma }*/

////////////////////////////////////////////////////////////////////

    /*public static long sumDigits(long i) {
        return i == 0 ? 0 : i % 10 + sumDigits(i / 10);
    }*/

//////////////////////////////////////////////////////////////////////
// –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π (?)
    // –°—É–º–º–∏—Ä—É–µ–º —Ü–∏—Ñ—Ä—ã
        // –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–∞—è —Å—É–º–º–∞ —Ü–∏—Ñ—Ä –±–æ–ª—å—à–µ (–≤–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é) "–°—É–º–º–∞", —Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        // –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–∞—è —Å—É–º–º–∞ —Ü–∏—Ñ—Ä –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º "–°—É–º–º—É"